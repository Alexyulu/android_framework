apply plugin: 'com.android.application'

def lib = rootProject.ext
def config = lib.androidConfig

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //不显示log//编译级别控制
            buildConfigField("boolean", "LOG_ERROR", "false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField 'String', 'URL', '"com.cheshi.carmaster"'
            //applicationIdSuffix ".debug"
            minifyEnabled false
            manifestPlaceholders = [APP_LABEL    : "master大师"]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    //base
    compile lib.dependencies["appcompat-v7"]
    compile lib.dependencies["design"]
    compile lib.dependencies["recyclerview-v7"]
    compile lib.dependencies["cardview-v7"]

    //rx
    compile lib.dependencies["rxjava"]
    compile lib.dependencies["rxandroid"]
    compile lib.dependencies["rxpermissions"]
    compile lib.dependencies["rxbinding"]
    compile lib.dependencies["rxbinding-appcompat-v7"]
    compile lib.dependencies["rxbinding-design"]

    //network
    compile lib.dependencies["gson"]
    compile lib.dependencies["glide"]
    compile lib.dependencies["glide-okhttp3-integration"]
    annotationProcessor lib.dependencies["glideCompiler"]
    compile lib.dependencies["retrofit"]
    compile lib.dependencies["retrofit-converter-gson"]
    compile lib.dependencies["retrofit-adapter-rxjava2"]
    compile lib.dependencies["okhttp"]
    compile lib.dependencies["okhttp-logging-interceptor"]

    //di
    compile lib.dependencies["dagger"]
    annotationProcessor lib.dependencies["dagger-compiler"]
    compile lib.dependencies["butterknife"]
    annotationProcessor lib.dependencies["butterknife-compiler"]

    //other
    compile lib.dependencies["logger"]
    compile lib.dependencies["fragmentation"]
    compile lib.dependencies["StatusBarUtil"]
    compile lib.dependencies["countdownview"]
}
